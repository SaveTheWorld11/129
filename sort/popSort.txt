//**********************************************冒泡排序********************************************************//
//**************************************************************************************************************//

void popsort(int* a, size_t n)
{
	int i = 0;
	int j = 0;;
	int tmp = 0;

	for (i  = 0; i < n - 1; i++)
	{
		for (j = 0; j < n - i - 1; j++)
		{
			if (a[j] > a[j + 1])
			{
				tmp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = tmp;
			}
		}
	}
}


//外循环优化->
void popsort1(int* a, size_t n)
{
	int i = 0;
	int j = 0;;
	int tmp = 0;
	int Pos = 1;

	for (i = 0; i < n - 1; i++)
	{
		if (Pos == 0)
			break;

		Pos = 0;

		for (j = 0; j < n - i - 1; j++)
		{
			if (a[j] > a[j + 1])
			{
				Pos = 1;
				tmp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = tmp;
			}
		}
	}
}


//内循环优化->
void popsort3(int* a, size_t n)
{
	int i = 0;
	int j = 0;;
	int tmp = 0;
	int Pos = 1;
	int K = n - 1;
	int M = 0;

	for (i = 0; i < n - 1; i++)
	{
		if (Pos == 0)
			break;

		Pos = 0;

		for (j = 0; j < K; j++)
		{
			if (a[j] > a[j + 1])
			{
				Pos = 1;
				tmp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = tmp;
				M = j;
			}
		}
		K = M;
	}
}